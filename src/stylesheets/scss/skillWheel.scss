@import './colors';
@import './math';

$programmingSkills: 8;
$littleSize: 20vw;
$bigSize: 35vw;
$maxSize: 90vw;

main.skills {
  & > .skillWheel {
    position: relative;
    height: #{$maxSize};
    width: #{$maxSize};

    & > .wheelTitle {
      width: #{$bigSize};
      height: #{$bigSize};
      border-radius: 50%;
      background-color: $code;
      position: absolute;
      display: flex;
      justify-content: center;
      text-align: center;
      font-size: calc(#{$maxSize}*0.05);
      font-weight: 600;
      color: $pale;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      transition: box-shadow 0.2s;
    }

    &.show {
      & > .main {
        transition: box-shadow 0.2s;
        box-shadow: 0px 0px 25px -5px rgba(0,0,0,1);
      }
    
      & > .allSkills > .skill {
        @for $i from 1 through $programmingSkills {
          &:nth-child(#{$i}) {
            animation: expand 0.3s cubic-bezier(0.75, 0.2, 0.5, 0.7) $i*(0.05s) forwards;
          }
        }

        &.show {
          transition: box-shadow 0.2s;
          box-shadow: 0px 0px 15px -4px rgba(0,0,0,1);

          img {
            transform: scale(1.2);
          }
        }
      }
    }

    & > .allSkills {
      transform-origin: 0 0;
      animation: rotate 120s linear infinite;
      position: relative;
      top: 50%;
      left: 50%;

      & > .skill {
        width: #{$littleSize};
        height: #{$littleSize};
        border-radius: 50%;
        background-color: $code;
        display: inline-flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        transform: scale(0);
        box-shadow: 0px 0px 0px 0px rgba(0,0,0,0);
        cursor: pointer;
        transition: box-shadow 0.2s;

        @for $i from 1 through $programmingSkills {
          &:nth-child(#{$i}) {
            top: calc(#{sin( pi() * 2 / $programmingSkills * ($i - 1)) * 0.5} * (#{$maxSize - $littleSize}) - #{$littleSize/2});
            left: calc(#{cos( pi() * 2 / $programmingSkills * ($i - 1)) * 0.5} * (#{$maxSize - $littleSize}) - #{$littleSize/2});
          }
        }

        & > button {
          animation: rotate 120s linear infinite reverse;
          width: calc(0.7071 * #{$littleSize});
          height: calc(0.7071 * #{$littleSize});

          & > img {
            width: inherit;
            height: inherit;
          }
        }
      }
    }
  }
}



@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes displayLine {
  from {
    transform: scaleX(0);
  } to {
    transform: scaleX(1);
  }
}

@keyframes smallExpand {
  from {
    transform: scale(1);
  } to {
    transform: scale(1.2);
  }
}

@keyframes expand {
  0% {
    transform: scale(0);
  }
  80% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes expandInfoImg {
  0% {
    transform: scale(1);
  }
  100% {
    transform: scale(3);
  }
}

@media screen and (min-aspect-ratio:1/1) {
  $maxSize: 90vh;
  $littleSize: 20vh;
  $bigSize: 35vh;

  body {
    height: 100vh;
  }

  main.skills {
    max-height: 100vh;

    & > .skillWheel {
      height: #{$maxSize};
      width: #{$maxSize};

      & > .wheelTitle {
        width: #{$bigSize};
        height: #{$bigSize};
        top: calc(50%);
        left: calc(50%);
        font-size: calc(#{$maxSize}*0.05);
      }

      & > .allSkills {
        top: calc(50%);
        left: calc(50%);
        
        & > .skill {
          width: #{$littleSize};
          height: #{$littleSize};

          @for $i from 1 through $programmingSkills {
            &:nth-child(#{$i}) {
              top: calc(#{sin( pi() * 2 / $programmingSkills * ($i - 1)) * 0.5} * calc(#{$maxSize - $littleSize}) - #{$littleSize/2});
              left: calc(#{cos( pi() * 2 / $programmingSkills * ($i - 1)) * 0.5} * calc(#{$maxSize - $littleSize}) - #{$littleSize/2});
            }
          }

          & > button > .skillImg {
            width: calc(0.7071 * #{$littleSize});
            height: calc(0.7071 * #{$littleSize});
          }
        }
      }
    }
  }
}
